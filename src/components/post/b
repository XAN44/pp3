'use server'
import { revalidatePath } from "next/cache"
import { db } from "../db"
import { getCurrentUser } from "../session"
import { useRouter } from "next/router"
import { redirect } from "next/dist/server/api-utils"
import { z } from "zod"



interface userPost {
    authorid: string
    path: string | null
    ImagePost: string
    content: string
}

export async function userPost({
    authorid,
    content,
    ImagePost,
    path
}: userPost): Promise<void> {
    try {
        const currentUser = await getCurrentUser()

        if (!currentUser) {
            throw new Error('ไม่มีผู้ใช้')
        }
        await db.post.create({
            data: {
                authorId: currentUser.id, content, ImagePost
            }
        })
        if (path === '/profile') {
            revalidatePath(path)
        }

    } catch (error: any) {
        throw new Error(`Failed to create/update user: ${error.message}`);
    }
}
export async function FetchUserPost() {
    try {
        const user = await getCurrentUser()
        if (!user?.id) {
            throw new Error('not have dung')
        }
        if (user?.id) {

            const fetchUser = await db.post.findMany({
                where: {
                    authorId: user.id
                },
                orderBy: {
                    createdAt: 'desc'
                },
                include: {
                    author: true,
                    comments: true

                }
            })
            return fetchUser;
        }

    } catch (error) {
        console.error('Error fetching user posts:', error); // หรือใช้วิธีที่ต้องการเพื่อจัดการข้อผิดพลาดที่เกิดขึ้น
    }
}


export async function Fetchusercomment() {
    try {
        const fetchcomment = await db.comment.findMany({

            select: {
                id: true,
                postId: true,
                text: true,
                authorid: true,
                createdAt: true,
                author: {
                    select: {
                        id: true,
                        name: true,
                        image: true
                    }
                }

            },
            orderBy: {
                createdAt: 'desc'
            },
        })
        return fetchcomment
    } catch (error) {
        console.error('Error fetching user posts:', error); // หรือใช้วิธีที่ต้องการเพื่อจัดการข้อผิดพลาดที่เกิดขึ้น

    }

}